[
    [
        "CVL Desktop",
        "Huygens on the CVL"
    ],
    {
        "CVL Desktop": {
            "__class__": "siteConfig",
            "__module__": "siteConfig",
            "agent": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -l {username} {execHost} \"echo agent_hello; bash \"",
                "failFatal": true,
                "host": "local",
                "loop": false,
                "regex": [
                    "agent_hello"
                ],
                "requireMatch": true
            },
            "dbusSessionBusAddress": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'MACHINE_ID=\\$(cat /var/lib/dbus/machine-id); cat ~/.dbus/session-bus/\\$MACHINE_ID-\\$(echo {vncDisplay} | tr -d \\\":\\\" | tr -d \\\".0\\\")'\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    "^DBUS_SESSION_BUS_ADDRESS=(?P<dbusSessionBusAddress>.*)$"
                ],
                "requireMatch": true
            },
            "directConnect": true,
            "displayStrings": {
                "__class__": "sshKeyDistDisplayStrings",
                "__module__": "siteConfig",
                "createNewKeyDialogNewPassphraseEmptyForbidden": "Sorry, empty passphrases are forbidden.",
                "createNewKeyDialogNewPassphraseMismatch": "Passphrases don't match!",
                "createNewKeyDialogNewPassphraseTooShort": "Passphrase is too short.",
                "helpEmailAddress": "help@massive.org.au",
                "newPassphrase": "It looks like this is the first time you're using the CVL on this\ncomputer. To use the CVL, the launcher will generate a local\npassphrase protected key on your computer which is used to\nauthenticate you and set up your remote CVL environment.\n\nPlease enter a new passphrase (twice to avoid typos) to protect your local key. \nAfter you've done this, your passphrase will be the primary method of\nauthentication for the launcher.\n\nWHY?\n\nThis new method of authentication allows you to create file system\nmounts to remote computer systems, and in the future it will support\nlaunching remote HPC jobs.",
                "newPassphraseEmptyForbidden": "Sorry, empty passphrases are forbidden.\nIt looks like this is the first time you're using the CVL on this\ncomputer. To use the CVL, the launcher will generate a local\npassphrase protected key on your computer which is used to\nauthenticate you and set up your remote CVL environment.\n\nPlease enter a new passphrase (twice to avoid typos) to protect your local key. \nAfter you've done this, your passphrase will be the primary method of\nauthentication for the launcher.\n\nWHY?\n\nThis new method of authentication allows you to create file system\nmounts to remote computer systems, and in the future it will support\nlaunching remote HPC jobs.",
                "newPassphraseMismatch": "Sorry, the two passphrases you entered don't match.\nIt looks like this is the first time you're using the CVL on this\ncomputer. To use the CVL, the launcher will generate a local\npassphrase protected key on your computer which is used to\nauthenticate you and set up your remote CVL environment.\n\nPlease enter a new passphrase (twice to avoid typos) to protect your local key. \nAfter you've done this, your passphrase will be the primary method of\nauthentication for the launcher.\n\nWHY?\n\nThis new method of authentication allows you to create file system\nmounts to remote computer systems, and in the future it will support\nlaunching remote HPC jobs.",
                "newPassphraseTitle": "Please enter a new passphrase",
                "newPassphraseTooShort": "Sorry, the passphrase must be at least six characters.\nIt looks like this is the first time you're using the CVL on this\ncomputer. To use the CVL, the launcher will generate a local\npassphrase protected key on your computer which is used to\nauthenticate you and set up your remote CVL environment.\n\nPlease enter a new passphrase (twice to avoid typos) to protect your local key. \nAfter you've done this, your passphrase will be the primary method of\nauthentication for the launcher.\n\nWHY?\n\nThis new method of authentication allows you to create file system\nmounts to remote computer systems, and in the future it will support\nlaunching remote HPC jobs.",
                "passphrasePrompt": "Please enter the passphrase for your SSH key",
                "passphrasePromptIncorrect": "Sorry, that passphrase was incorrect.\nPlease enter the passphrase for you SSH Key\nIf you have forgoten the passphrase for you key, you may need to delete it and create a new key.\nYou can find this option under the Identity menu.\n",
                "passphrasePromptIncorrectl": "Incorrect. enter key passphrase",
                "passwdPrompt": "Please enter the password for your CVL account.\nThis is the password you entered when you requested an account\nat the website https://web.cvl.massive.org.au/users",
                "passwdPromptIncorrect": "Sorry, that password was incorrect.\nPlease enter the password for your CVL account.\nThis is the password you entered when you requested an account\nat the website https://web.cvl.massive.org.au/users",
                "persistentMessage": "Would you like to leave your current session running so that you can reconnect later?",
                "persistentMessagePersist": "Leave it running",
                "persistentMessageStop": "Stop the desktop",
                "qdelQueuedJob": "It looks like you've been waiting for a job to start.\nDo you want me to delete the job or leave it in the queue so you can reconnect later?\n",
                "qdelQueuedJobNOOP": "Leave it in the queue (I'll reconnect later)",
                "qdelQueuedJobQdel": "Delete the job",
                "reconnectMessage": "An Existing Desktop was found. Would you like to reconnect or kill it and start a new desktop?",
                "reconnectMessageNo": "New desktop",
                "reconnectMessageYes": "Reconnect",
                "temporaryKey": "\nWould you like to use the launchers old behaviour (entering a password every time you start a new desktop) or try the new behaviour (creating an ssh key pair and entering a passphrase the first time you use the launcher after reboot.)\n\nPasswords are recomended if this is a shared user account.\n\nSSH Keys are recommended if you are the only person who uses this account.\n\nThis option can be changed from the Identity menu.\n",
                "temporaryKeyNo": "Use my SSH Key",
                "temporaryKeyYes": "Use my password every time"
            },
            "displayWebDavInfoDialogOnRemoteDesktop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'sleep 2;echo -e \\\"You can access your local home directory in Nautilus File Browser, using the location:\\n\\ndav://{localUsername}@localhost:8080/{homeDirectoryWebDavShareName}\\n\\nYour one-time password is {vncPasswd}\\\" > ~/.vnc/\\$HOSTNAME\\$DISPLAY-webdav.txt'\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "execHost": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; qstat -f {jobidNumber} | grep exec_host | sed 's/\\ \\ */\\ /g' | cut -f 4 -d ' ' | cut -f 1 -d '/' | xargs -iname hostn name | grep address | sed 's/\\ \\ */\\ /g' | cut -f 3 -d ' ' | xargs -iip echo execHost ip; qstat -f {jobidNumber}\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*execHost (?P<execHost>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "getProjects": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"groups | sed 's@ @\\n@g'\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<group>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "listAll": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; qstat -u {username} | tail -n +6\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<jobid>(?P<jobidNumber>[0-9]+).\\S+)\\s+\\S+\\s+(?P<queue>\\S+)\\s+(?P<jobname>desktop_\\S+)\\s+(?P<sessionID>\\S+)\\s+(?P<nodes>\\S+)\\s+(?P<tasks>\\S+)\\s+(?P<mem>\\S+)\\s+(?P<reqTime>\\S+)\\s+(?P<state>[^C])\\s+(?P<elapTime>\\S+)\\s*$"
                ],
                "requireMatch": false
            },
            "loginHost": "login.cvl.massive.org.au",
            "messageRegeexs": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "messageRegexs": [
                {
                    "__class__": "__regex__",
                    "pattern": "^INFO:(?P<info>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^WARN:(?P<warn>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^ERROR:(?P<error>.*(?:\n|\r\n?))"
                }
            ],
            "onConnectScript": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'module load keyutility ; mountUtility.py'\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "openWebDavShareInRemoteFileBrowser": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} \\\"export DBUS_SESSION_BUS_ADDRESS={dbusSessionBusAddress};echo \\\\\\\"import pexpect;child = pexpect.spawn('gvfs-mount dav://{localUsername}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName}');child.expect('Password: ');child.sendline('{vncPasswd}')\\\\\\\" | python;/usr/bin/gconftool-2 --type=Boolean --set /apps/nautilus/preferences/always_use_location_entry true;DISPLAY={vncDisplay} /usr/bin/nautilus --no-desktop --sm-disable dav://{localUsername}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName};\\\"\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "otp": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load turbovnc ; vncpasswd -o -display localhost{vncDisplay}\"",
                "failFatal": true,
                "host": "exec",
                "loop": false,
                "regex": [
                    "^\\s*Full control one-time password: (?P<vncPasswd>[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "runSanityCheck": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "failFatal": false,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "running": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; qstat -x {jobidNumber}\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    "<job_state>R</job_state>"
                ],
                "requireMatch": true
            },
            "setDisplayResolution": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "failFatal": false,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "showStart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "failFatal": false,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "startServer": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; echo 'module load pbs ; /usr/local/bin/vncsession --vnc turbovnc --geometry {resolution} ; sleep {wallseconds}' |  qsub -l nodes={nodes}:ppn=1,walltime={wallseconds} -N desktop_{username} -o .vnc/ -e .vnc/\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<jobid>(?P<jobidNumber>[0-9]+)\\.\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "stop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; qdel -a {jobidNumber}\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "stopForRestart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; qdel -a {jobidNumber}\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "tunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -L {localPortNumber}:localhost:{remotePortNumber} -l {username} {execHost} \"echo tunnel_hello; bash\"",
                "failFatal": true,
                "host": "local",
                "loop": false,
                "regex": [
                    "tunnel_hello"
                ],
                "requireMatch": true
            },
            "visibility": {
                "advancedCheckBoxPanel": true,
                "cipherPanel": "Advanced",
                "debugCheckBoxPanel": "Advanced",
                "loginHostPanel": false,
                "optionsDialog": false,
                "projectPanel": false,
                "resolutionPanel": "Advanced",
                "resourcePanel": "Advanced",
                "usernamePanel": true
            },
            "vncDisplay": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"cat /var/spool/torque/spool/{jobidNumber}.*\"",
                "failFatal": true,
                "host": "exec",
                "loop": false,
                "regex": [
                    "^.*?started on display \\S+(?P<vncDisplay>:[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "webDavIntermediatePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/local/bin/get_ephemeral_port.py\"",
                "failFatal": true,
                "host": "exec",
                "loop": false,
                "regex": [
                    "^(?P<intermediateWebDavPortNumber>[0-9]+)$"
                ],
                "requireMatch": true
            },
            "webDavRemotePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/local/bin/get_ephemeral_port.py\"",
                "failFatal": true,
                "host": "exec",
                "loop": false,
                "regex": [
                    "^(?P<remoteWebDavPortNumber>[0-9]+)$"
                ],
                "requireMatch": true
            },
            "webDavTunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -oExitOnForwardFailure=yes -R {remoteWebDavPortNumber}:localhost:{localWebDavPortNumber} -l {username} {execHost} \"echo tunnel_hello; bash\"",
                "failFatal": true,
                "host": "local",
                "loop": false,
                "regex": [
                    "tunnel_hello"
                ],
                "requireMatch": true
            },
            "webDavUnmount": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'export DBUS_SESSION_BUS_ADDRESS={dbusSessionBusAddress};DISPLAY={vncDisplay} wmctrl -F -c \"{homeDirectoryWebDavShareName} - File Browser\"; DISPLAY={vncDisplay} timeout 3 gvfs-mount --unmount-scheme dav'\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            }
        },
        "Huygens on the CVL": {
            "__class__": "siteConfig",
            "__module__": "siteConfig",
            "agent": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -l {username} {execHost} \"echo agent_hello; bash \"",
                "failFatal": true,
                "host": "local",
                "loop": false,
                "regex": [
                    "agent_hello"
                ],
                "requireMatch": true
            },
            "dbusSessionBusAddress": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'MACHINE_ID=\\$(cat /var/lib/dbus/machine-id); cat ~/.dbus/session-bus/\\$MACHINE_ID-\\$(echo {vncDisplay} | tr -d \\\":\\\" | tr -d \\\".0\\\")'\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    "^DBUS_SESSION_BUS_ADDRESS=(?P<dbusSessionBusAddress>.*)$"
                ],
                "requireMatch": true
            },
            "directConnect": true,
            "displayStrings": {
                "__class__": "sshKeyDistDisplayStrings",
                "__module__": "siteConfig",
                "createNewKeyDialogNewPassphraseEmptyForbidden": "Sorry, empty passphrases are forbidden.",
                "createNewKeyDialogNewPassphraseMismatch": "Passphrases don't match!",
                "createNewKeyDialogNewPassphraseTooShort": "Passphrase is too short.",
                "helpEmailAddress": "help@massive.org.au",
                "newPassphrase": "It looks like this is the first time you're using the CVL on this\ncomputer. To use the CVL, the launcher will generate a local\npassphrase protected key on your computer which is used to\nauthenticate you and set up your remote CVL environment.\n\nPlease enter a new passphrase (twice to avoid typos) to protect your local key. \nAfter you've done this, your passphrase will be the primary method of\nauthentication for the launcher.\n\nWHY?\n\nThis new method of authentication allows you to create file system\nmounts to remote computer systems, and in the future it will support\nlaunching remote HPC jobs.",
                "newPassphraseEmptyForbidden": "Sorry, empty passphrases are forbidden.\nIt looks like this is the first time you're using the CVL on this\ncomputer. To use the CVL, the launcher will generate a local\npassphrase protected key on your computer which is used to\nauthenticate you and set up your remote CVL environment.\n\nPlease enter a new passphrase (twice to avoid typos) to protect your local key. \nAfter you've done this, your passphrase will be the primary method of\nauthentication for the launcher.\n\nWHY?\n\nThis new method of authentication allows you to create file system\nmounts to remote computer systems, and in the future it will support\nlaunching remote HPC jobs.",
                "newPassphraseMismatch": "Sorry, the two passphrases you entered don't match.\nIt looks like this is the first time you're using the CVL on this\ncomputer. To use the CVL, the launcher will generate a local\npassphrase protected key on your computer which is used to\nauthenticate you and set up your remote CVL environment.\n\nPlease enter a new passphrase (twice to avoid typos) to protect your local key. \nAfter you've done this, your passphrase will be the primary method of\nauthentication for the launcher.\n\nWHY?\n\nThis new method of authentication allows you to create file system\nmounts to remote computer systems, and in the future it will support\nlaunching remote HPC jobs.",
                "newPassphraseTitle": "Please enter a new passphrase",
                "newPassphraseTooShort": "Sorry, the passphrase must be at least six characters.\nIt looks like this is the first time you're using the CVL on this\ncomputer. To use the CVL, the launcher will generate a local\npassphrase protected key on your computer which is used to\nauthenticate you and set up your remote CVL environment.\n\nPlease enter a new passphrase (twice to avoid typos) to protect your local key. \nAfter you've done this, your passphrase will be the primary method of\nauthentication for the launcher.\n\nWHY?\n\nThis new method of authentication allows you to create file system\nmounts to remote computer systems, and in the future it will support\nlaunching remote HPC jobs.",
                "passphrasePrompt": "Please enter the passphrase for your SSH key",
                "passphrasePromptIncorrect": "Sorry, that passphrase was incorrect.\nPlease enter the passphrase for you SSH Key\nIf you have forgoten the passphrase for you key, you may need to delete it and create a new key.\nYou can find this option under the Identity menu.\n",
                "passphrasePromptIncorrectl": "Incorrect. enter key passphrase",
                "passwdPrompt": "Please enter the password for your CVL account.\nThis is the password you entered when you requested an account\nat the website https://web.cvl.massive.org.au/users",
                "passwdPromptIncorrect": "Sorry, that password was incorrect.\nPlease enter the password for your CVL account.\nThis is the password you entered when you requested an account\nat the website https://web.cvl.massive.org.au/users",
                "persistentMessage": "Would you like to leave your current session running so that you can reconnect later?",
                "persistentMessagePersist": "Leave it running",
                "persistentMessageStop": "Stop the desktop",
                "qdelQueuedJob": "It looks like you've been waiting for a job to start.\nDo you want me to delete the job or leave it in the queue so you can reconnect later?\n",
                "qdelQueuedJobNOOP": "Leave it in the queue (I'll reconnect later)",
                "qdelQueuedJobQdel": "Delete the job",
                "reconnectMessage": "An Existing Desktop was found. Would you like to reconnect or kill it and start a new desktop?",
                "reconnectMessageNo": "New desktop",
                "reconnectMessageYes": "Reconnect",
                "temporaryKey": "\nWould you like to use the launchers old behaviour (entering a password every time you start a new desktop) or try the new behaviour (creating an ssh key pair and entering a passphrase the first time you use the launcher after reboot.)\n\nPasswords are recomended if this is a shared user account.\n\nSSH Keys are recommended if you are the only person who uses this account.\n\nThis option can be changed from the Identity menu.\n",
                "temporaryKeyNo": "Use my SSH Key",
                "temporaryKeyYes": "Use my password every time"
            },
            "displayWebDavInfoDialogOnRemoteDesktop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'sleep 2;echo -e \\\"You can access your local home directory in Nautilus File Browser, using the location:\\n\\ndav://{localUsername}@localhost:8080/{homeDirectoryWebDavShareName}\\n\\nYour one-time password is {vncPasswd}\\\" > ~/.vnc/\\$HOSTNAME\\$DISPLAY-webdav.txt'\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "execHost": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; qstat -f {jobidNumber} | grep exec_host | sed 's/\\ \\ */\\ /g' | cut -f 4 -d ' ' | cut -f 1 -d '/' | xargs -iname hostn name | grep address | sed 's/\\ \\ */\\ /g' | cut -f 3 -d ' ' | xargs -iip echo execHost ip; qstat -f {jobidNumber}\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*execHost (?P<execHost>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "getProjects": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"groups | sed 's@ @\\n@g'\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<group>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "listAll": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; qstat -u {username} | tail -n +6\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<jobid>(?P<jobidNumber>[0-9]+).\\S+)\\s+\\S+\\s+(?P<queue>huygens)\\s+(?P<jobname>desktop_\\S+)\\s+(?P<sessionID>\\S+)\\s+(?P<nodes>\\S+)\\s+(?P<tasks>\\S+)\\s+(?P<mem>\\S+)\\s+(?P<reqTime>\\S+)\\s+(?P<state>[^C])\\s+(?P<elapTime>\\S+)\\s*$"
                ],
                "requireMatch": false
            },
            "loginHost": "login.cvl.massive.org.au",
            "messageRegeexs": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "messageRegexs": [
                {
                    "__class__": "__regex__",
                    "pattern": "^INFO:(?P<info>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^WARN:(?P<warn>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^ERROR:(?P<error>.*(?:\n|\r\n?))"
                }
            ],
            "onConnectScript": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'module load keyutility ; mountUtility.py'\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "openWebDavShareInRemoteFileBrowser": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} \\\"export DBUS_SESSION_BUS_ADDRESS={dbusSessionBusAddress};echo \\\\\\\"import pexpect;child = pexpect.spawn('gvfs-mount dav://{localUsername}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName}');child.expect('Password: ');child.sendline('{vncPasswd}')\\\\\\\" | python;/usr/bin/gconftool-2 --type=Boolean --set /apps/nautilus/preferences/always_use_location_entry true;DISPLAY={vncDisplay} /usr/bin/nautilus --no-desktop --sm-disable dav://{localUsername}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName};\\\"\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "otp": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load turbovnc ; vncpasswd -o -display localhost{vncDisplay}\"",
                "failFatal": true,
                "host": "exec",
                "loop": false,
                "regex": [
                    "^\\s*Full control one-time password: (?P<vncPasswd>[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "runSanityCheck": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "failFatal": false,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "running": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; qstat -x {jobidNumber}\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    "<job_state>R</job_state>"
                ],
                "requireMatch": true
            },
            "setDisplayResolution": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "failFatal": false,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "showStart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "failFatal": false,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "startServer": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; echo 'module load pbs ; /usr/local/bin/vncsession --vnc turbovnc --geometry {resolution} ; sleep {wallseconds}' |  qsub -q huygens -l nodes=1:ppn=1 -N desktop_{username} -o .vnc/ -e .vnc/\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<jobid>(?P<jobidNumber>[0-9]+)\\.\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "stop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; qdel -a {jobidNumber}\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "stopForRestart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; qdel -a {jobidNumber}\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "tunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -L {localPortNumber}:localhost:{remotePortNumber} -l {username} {execHost} \"echo tunnel_hello; bash\"",
                "failFatal": true,
                "host": "local",
                "loop": false,
                "regex": [
                    "tunnel_hello"
                ],
                "requireMatch": true
            },
            "visibility": {
                "advancedCheckBoxPanel": true,
                "cipherPanel": "Advanced",
                "debugCheckBoxPanel": "Advanced",
                "loginHostPanel": false,
                "optionsDialog": false,
                "projectPanel": false,
                "resolutionPanel": "Advanced",
                "resourcePanel": "Advanced",
                "usernamePanel": true
            },
            "vncDisplay": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"cat /var/spool/torque/spool/{jobidNumber}.*\"",
                "failFatal": true,
                "host": "exec",
                "loop": false,
                "regex": [
                    "^.*?started on display \\S+(?P<vncDisplay>:[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "webDavIntermediatePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/local/bin/get_ephemeral_port.py\"",
                "failFatal": true,
                "host": "exec",
                "loop": false,
                "regex": [
                    "^(?P<intermediateWebDavPortNumber>[0-9]+)$"
                ],
                "requireMatch": true
            },
            "webDavRemotePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/local/bin/get_ephemeral_port.py\"",
                "failFatal": true,
                "host": "exec",
                "loop": false,
                "regex": [
                    "^(?P<remoteWebDavPortNumber>[0-9]+)$"
                ],
                "requireMatch": true
            },
            "webDavTunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -oExitOnForwardFailure=yes -R {remoteWebDavPortNumber}:localhost:{localWebDavPortNumber} -l {username} {execHost} \"echo tunnel_hello; bash\"",
                "failFatal": true,
                "host": "local",
                "loop": false,
                "regex": [
                    "tunnel_hello"
                ],
                "requireMatch": true
            },
            "webDavUnmount": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'export DBUS_SESSION_BUS_ADDRESS={dbusSessionBusAddress};DISPLAY={vncDisplay} wmctrl -F -c \"{homeDirectoryWebDavShareName} - File Browser\"; DISPLAY={vncDisplay} timeout 3 gvfs-mount --unmount-scheme dav'\"",
                "failFatal": true,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            }
        }
    }
]