[
    [
        "Desktop on m1.massive.org.au",
        "Desktop on m2.massive.org.au",
        "CVL Desktop",
        "Huygens on the CVL",
        "Other"
    ],
    {
        "CVL Desktop": {
            "__class__": "siteConfig",
            "__module__": "siteConfig",
            "agent": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -l {username} {execHost} \"echo agent_hello; bash \"",
                "host": "local",
                "loop": false,
                "regex": [
                    "agent_hello"
                ],
                "requireMatch": true
            },
            "dbusSessionBusAddress": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'MACHINE_ID=\\$(cat /var/lib/dbus/machine-id); cat ~/.dbus/session-bus/\\$MACHINE_ID-\\$(echo {vncDisplay} | tr -d \\\":\\\" | tr -d \\\".0\\\")'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^DBUS_SESSION_BUS_ADDRESS=(?P<dbusSessionBusAddress>.*)$"
                ],
                "requireMatch": true
            },
            "directConnect": true,
            "displayStrings": {
                "__class__": "sshKeyDistDisplayStrings",
                "__module__": "siteConfig",
                "newPassphrase": "new passphrase for new key",
                "newPassphraseEmptyForbidden": "new passphrase. empty passphrase forbidden",
                "newPassphraseMismatch": "passphrases don't match. enter new passphrases",
                "newPassphraseTitle": "Please enter a new passphrase",
                "newPassphraseTooShort": "passphrase to short. enter a new passphrase",
                "passphrasePrompt": "enter key passphrase",
                "passphrasePromptIncorrectl": "Incorrect. enter key passphrase",
                "passwdPrompt": "enter passwd",
                "passwdPromptIncorrect": "passwd incorrect. reenter",
                "persistentMessage": "Would you like to leave your current session running so that you can reconnect later?\nIt has {timestring} remaining.",
                "persistentMessagePersist": "Leave it running",
                "persistentMessageStop": "Stop the desktop",
                "qdelQueuedJob": "It looks like you've been waiting for a job to start.\nDo you want me to delete the job or leave it in the queue so you can reconnect later?\n",
                "qdelQueuedJobNOOP": "Leave it in the queue (I'll reconnect later)",
                "qdelQueuedJobQdel": "Delete the job",
                "reconnectMessage": "An Existing Desktop was found. It has {timestring} remaining. Would you like to reconnect or kill it and start a new desktop?",
                "reconnectMessageNo": "New desktop",
                "reconnectMessageYes": "Reconnect",
                "temporaryKey": "\nWould you like to use the launchers old behaviour (entering a password every time you start a new desktop) or try the new behaviour (creating an ssh key pair and entering a passphrase the first time you use the launcher after reboot.)\n\nPasswords are recomended if this is a shared user account.\n\nSSH Keys are recommended if you are the only person who uses this account.\n\nThis option can be changed from the Identity menu.\n",
                "temporaryKeyNo": "Use my SSH Key",
                "temporaryKeyYes": "Use my password every time"
            },
            "displayWebDavInfoDialogOnRemoteDesktop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'sleep 2;echo -e \\\"You can access your local home directory in Nautilus File Browser, using the location:\\n\\ndav://{localUsername}@localhost:8080/{homeDirectoryWebDavShareName}\\n\\nYour one-time password is {vncPasswd}\\\" > ~/.vnc/\\$HOSTNAME\\$DISPLAY-webdav.txt'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "execHost": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; qstat -f {jobidNumber} | grep exec_host | sed 's/\\ \\ */\\ /g' | cut -f 4 -d ' ' | cut -f 1 -d '/' | xargs -iname hostn name | grep address | sed 's/\\ \\ */\\ /g' | cut -f 3 -d ' ' | xargs -iip echo execHost ip; qstat -f {jobidNumber}\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*execHost (?P<execHost>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "getProjects": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"groups | sed 's@ @\\n@g'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<group>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "listAll": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; qstat -u {username} | tail -n +6\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<jobid>(?P<jobidNumber>[0-9]+).\\S+)\\s+{username}\\s+(?P<queue>batch)\\s+(?P<jobname>desktop_\\S+)\\s+(?P<sessionID>\\S+)\\s+(?P<nodes>\\S+)\\s+(?P<tasks>\\S+)\\s+(?P<mem>\\S+)\\s+(?P<reqTime>\\S+)\\s+(?P<state>[^C])\\s+(?P<elapTime>\\S+)\\s*$"
                ],
                "requireMatch": false
            },
            "loginHost": "login.cvl.massive.org.au",
            "messageRegeexs": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "messageRegexs": [
                {
                    "__class__": "__regex__",
                    "pattern": "^INFO:(?P<info>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^WARN:(?P<warn>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^ERROR:(?P<error>.*(?:\n|\r\n?))"
                }
            ],
            "openWebDavShareInRemoteFileBrowser": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} \\\"export DBUS_SESSION_BUS_ADDRESS={dbusSessionBusAddress};echo \\\\\\\"import pexpect;child = pexpect.spawn('gvfs-mount dav://{localUsername}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName}');child.expect('Password: ');child.sendline('{vncPasswd}')\\\\\\\" | python;/usr/bin/gconftool-2 --type=Boolean --set /apps/nautilus/preferences/always_use_location_entry true;DISPLAY={vncDisplay} /usr/bin/nautilus --no-desktop --sm-disable dav://{localUsername}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName};\\\"\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "otp": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load turbovnc ; vncpasswd -o -display localhost{vncDisplay}\"",
                "host": "exec",
                "loop": false,
                "regex": [
                    "^\\s*Full control one-time password: (?P<vncPasswd>[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "runSanityCheck": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "running": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; qstat | grep {username}\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<jobid>{jobidNumber}\\.\\S+)\\s+(?P<jobname>desktop_\\S+)\\s+{username}\\s+(?P<elapTime>\\S+)\\s+(?P<state>R)\\s+(?P<queue>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "setDisplayResolution": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "showStart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "startServer": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; echo 'module load pbs ; /usr/local/bin/vncsession --vnc turbovnc --geometry {resolution} ; sleep {wallseconds}' |  qsub -l nodes=1:ppn=1,walltime={wallseconds} -N desktop_{username} -o .vnc/ -e .vnc/\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<jobid>(?P<jobidNumber>[0-9]+)\\.\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "stop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; qdel -a {jobidNumber}\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "stopForRestart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; qdel -a {jobidNumber}\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "tunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -L {localPortNumber}:localhost:{remotePortNumber} -l {username} {execHost} \"echo tunnel_hello; bash\"",
                "host": "local",
                "loop": false,
                "regex": [
                    "tunnel_hello"
                ],
                "requireMatch": true
            },
            "visibility": {
                "advancedCheckBoxPanel": true,
                "cipherPanel": "Advanced",
                "debugCheckBoxPanel": "Advanced",
                "loginHostPanel": false,
                "optionsDialog": false,
                "projectPanel": false,
                "resolutionPanel": "Advanced",
                "resourcePanel": "Advanced",
                "usernamePanel": true
            },
            "vncDisplay": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"cat /var/spool/torque/spool/{jobidNumber}.*\"",
                "host": "exec",
                "loop": false,
                "regex": [
                    "^.*?started on display \\S+(?P<vncDisplay>:[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "webDavIntermediatePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/local/bin/get_ephemeral_port.py\"",
                "host": "exec",
                "loop": false,
                "regex": [
                    "^(?P<intermediateWebDavPortNumber>[0-9]+)$"
                ],
                "requireMatch": true
            },
            "webDavRemotePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/local/bin/get_ephemeral_port.py\"",
                "host": "exec",
                "loop": false,
                "regex": [
                    "^(?P<remoteWebDavPortNumber>[0-9]+)$"
                ],
                "requireMatch": true
            },
            "webDavTunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -oExitOnForwardFailure=yes -R {remoteWebDavPortNumber}:localhost:{localWebDavPortNumber} -l {username} {execHost} \"echo tunnel_hello; bash\"",
                "host": "local",
                "loop": false,
                "regex": [
                    "tunnel_hello"
                ],
                "requireMatch": true
            },
            "webDavUnmount": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'export DBUS_SESSION_BUS_ADDRESS={dbusSessionBusAddress};DISPLAY={vncDisplay} wmctrl -F -c \"{homeDirectoryWebDavShareName} - File Browser\"; DISPLAY={vncDisplay} timeout 3 gvfs-mount --unmount-scheme dav'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            }
        },
        "Desktop on m1.massive.org.au": {
            "__class__": "siteConfig",
            "__module__": "siteConfig",
            "agent": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=yes -l {username} {loginHost} \"/usr/bin/ssh -A {execHost} \\\"echo agent_hello; bash \\\"\"",
                "host": "local",
                "loop": false,
                "regex": [
                    "agent_hello"
                ],
                "requireMatch": true
            },
            "dbusSessionBusAddress": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"echo DBUS_SESSION_BUS_ADDRESS=dummy_dbus_session_bus_address\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^DBUS_SESSION_BUS_ADDRESS=(?P<dbusSessionBusAddress>.*)$"
                ],
                "requireMatch": true
            },
            "directConnect": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "displayStrings": {
                "__class__": "sshKeyDistDisplayStrings",
                "__module__": "siteConfig",
                "newPassphrase": "new passphrase for new key",
                "newPassphraseEmptyForbidden": "new passphrase. empty passphrase forbidden",
                "newPassphraseMismatch": "passphrases don't match. enter new passphrases",
                "newPassphraseTitle": "Please enter a new passphrase",
                "newPassphraseTooShort": "passphrase to short. enter a new passphrase",
                "passphrasePrompt": "enter key passphrase",
                "passphrasePromptIncorrectl": "Incorrect. enter key passphrase",
                "passwdPrompt": "enter passwd",
                "passwdPromptIncorrect": "passwd incorrect. reenter",
                "persistentMessage": "Would you like to leave your current session running so that you can reconnect later?\nIt has {timestring} remaining.",
                "persistentMessagePersist": "Leave it running",
                "persistentMessageStop": "Stop the desktop",
                "qdelQueuedJob": "It looks like you've been waiting for a job to start.\nDo you want me to delete the job or leave it in the queue so you can reconnect later?\n",
                "qdelQueuedJobNOOP": "Leave it in the queue (I'll reconnect later)",
                "qdelQueuedJobQdel": "Delete the job",
                "reconnectMessage": "An Existing Desktop was found. It has {timestring} remaining. Would you like to reconnect or kill it and start a new desktop?",
                "reconnectMessageNo": "New desktop",
                "reconnectMessageYes": "Reconnect",
                "temporaryKey": "\nWould you like to use the launchers old behaviour (entering a password every time you start a new desktop) or try the new behaviour (creating an ssh key pair and entering a passphrase the first time you use the launcher after reboot.)\n\nPasswords are recomended if this is a shared user account.\n\nSSH Keys are recommended if you are the only person who uses this account.\n\nThis option can be changed from the Identity menu.\n",
                "temporaryKeyNo": "Use my SSH Key",
                "temporaryKeyYes": "Use my password every time"
            },
            "displayWebDavInfoDialogOnRemoteDesktop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'echo -e \\\"You can access your local home directory in Konqueror with the URL:%sbr%s\\nwebdav://{localUsername}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName}%sbr%s\\nYour one-time password is {vncPasswd}\\\" > ~/.vnc/\\$HOSTNAME\\$DISPLAY-webdav.txt;'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "execHost": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "qpeek {jobidNumber}",
                "host": "login",
                "loop": false,
                "regex": [
                    "\\s*To access the desktop first create a secure tunnel to (?P<execHost>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "getProjects": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"glsproject -A -q | grep ',{username},\\|\\s{username},\\|,{username}\\s' \"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<group>\\S+)\\s+.*$"
                ],
                "requireMatch": true
            },
            "listAll": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "qstat -u {username}",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<jobid>(?P<jobidNumber>[0-9]+).\\S+)\\s+{username}\\s+(?P<queue>\\S+)\\s+(?P<jobname>desktop_\\S+)\\s+(?P<sessionID>\\S+)\\s+(?P<nodes>\\S+)\\s+(?P<tasks>\\S+)\\s+(?P<mem>\\S+)\\s+(?P<reqTime>\\S+)\\s+(?P<state>[^C])\\s+(?P<elapTime>\\S+)\\s*$"
                ],
                "requireMatch": false
            },
            "loginHost": "m1.massive.org.au",
            "messageRegeexs": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "messageRegexs": [
                {
                    "__class__": "__regex__",
                    "pattern": "^INFO:(?P<info>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^WARN:(?P<warn>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^ERROR:(?P<error>.*(?:\n|\r\n?))"
                }
            ],
            "openWebDavShareInRemoteFileBrowser": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'DISPLAY={vncDisplay} /usr/bin/konqueror webdav://{localUsername}:{vncPasswd}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName}'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "otp": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} ' module load turbovnc ; vncpasswd -o -display localhost{vncDisplay}'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*Full control one-time password: (?P<vncPasswd>[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "runSanityCheck": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'/usr/local/desktop/sanity_check.sh {launcher_version_number}'",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "running": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "qstat -u {username}",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<jobid>{jobid})\\s+{username}\\s+(?P<queue>\\S+)\\s+(?P<jobname>desktop_\\S+)\\s+(?P<sessionID>\\S+)\\s+(?P<nodes>\\S+)\\s+(?P<tasks>\\S+)\\s+(?P<mem>\\S+)\\s+(?P<reqTime>\\S+)\\s+(?P<state>R)\\s+(?P<elapTime>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "setDisplayResolution": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'/usr/local/desktop/set_display_resolution.sh {resolution}'",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "showStart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "showstart {jobid}",
                "host": "login",
                "loop": false,
                "regex": [
                    "Estimated Rsv based start .*?on (?P<estimatedStart>.*)"
                ],
                "requireMatch": true
            },
            "startServer": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'/usr/local/desktop/request_visnode.sh {project} {hours} {nodes} True False False'",
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<jobid>(?P<jobidNumber>[0-9]+)\\.\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "stop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'qdel -a {jobid}'",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "stopForRestart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'qdel {jobid} ; sleep 5'",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "tunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=yes -L {localPortNumber}:{execHost}:{remotePortNumber} -l {username} {loginHost} \"echo tunnel_hello; bash\"",
                "host": "local",
                "loop": false,
                "regex": [
                    "tunnel_hello"
                ],
                "requireMatch": true
            },
            "visibility": {
                "advancedCheckBoxPanel": true,
                "cipherPanel": "Advanced",
                "debugCheckBoxPanel": "Advanced",
                "loginHostPanel": false,
                "optionsDialog": false,
                "projectPanel": true,
                "resolutionPanel": "Advanced",
                "resourcePanel": true,
                "usernamePanel": true
            },
            "vncDisplay": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} ' module load turbovnc ; vncserver -list'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<vncDisplay>:[0-9]+)\\s*(?P<vncPID>[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "webDavIntermediatePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/local/desktop/get_ephemeral_port.py\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<intermediateWebDavPortNumber>[0-9]+)$"
                ],
                "requireMatch": true
            },
            "webDavRemotePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} /usr/local/desktop/get_ephemeral_port.py\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<remoteWebDavPortNumber>[0-9]+)$"
                ],
                "requireMatch": true
            },
            "webDavTunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -oExitOnForwardFailure=yes -R {intermediateWebDavPortNumber}:localhost:{localWebDavPortNumber} -l {username} {loginHost} \"ssh -R {remoteWebDavPortNumber}:localhost:{intermediateWebDavPortNumber} {execHost} 'echo tunnel_hello; bash'\"",
                "host": "local",
                "loop": false,
                "regex": [
                    "tunnel_hello"
                ],
                "requireMatch": true
            },
            "webDavUnmount": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'DISPLAY={vncDisplay} /usr/local/desktop/close_webdav_window.sh webdav://{localUsername}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName}'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            }
        },
        "Desktop on m2.massive.org.au": {
            "__class__": "siteConfig",
            "__module__": "siteConfig",
            "agent": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=yes -l {username} {loginHost} \"/usr/bin/ssh -A {execHost} \\\"echo agent_hello; bash \\\"\"",
                "host": "local",
                "loop": false,
                "regex": [
                    "agent_hello"
                ],
                "requireMatch": true
            },
            "dbusSessionBusAddress": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"echo DBUS_SESSION_BUS_ADDRESS=dummy_dbus_session_bus_address\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^DBUS_SESSION_BUS_ADDRESS=(?P<dbusSessionBusAddress>.*)$"
                ],
                "requireMatch": true
            },
            "directConnect": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "displayStrings": {
                "__class__": "sshKeyDistDisplayStrings",
                "__module__": "siteConfig",
                "newPassphrase": "new passphrase for new key",
                "newPassphraseEmptyForbidden": "new passphrase. empty passphrase forbidden",
                "newPassphraseMismatch": "passphrases don't match. enter new passphrases",
                "newPassphraseTitle": "Please enter a new passphrase",
                "newPassphraseTooShort": "passphrase to short. enter a new passphrase",
                "passphrasePrompt": "enter key passphrase",
                "passphrasePromptIncorrectl": "Incorrect. enter key passphrase",
                "passwdPrompt": "enter passwd",
                "passwdPromptIncorrect": "passwd incorrect. reenter",
                "persistentMessage": "Would you like to leave your current session running so that you can reconnect later?\nIt has {timestring} remaining.",
                "persistentMessagePersist": "Leave it running",
                "persistentMessageStop": "Stop the desktop",
                "qdelQueuedJob": "It looks like you've been waiting for a job to start.\nDo you want me to delete the job or leave it in the queue so you can reconnect later?\n",
                "qdelQueuedJobNOOP": "Leave it in the queue (I'll reconnect later)",
                "qdelQueuedJobQdel": "Delete the job",
                "reconnectMessage": "An Existing Desktop was found. It has {timestring} remaining. Would you like to reconnect or kill it and start a new desktop?",
                "reconnectMessageNo": "New desktop",
                "reconnectMessageYes": "Reconnect",
                "temporaryKey": "\nWould you like to use the launchers old behaviour (entering a password every time you start a new desktop) or try the new behaviour (creating an ssh key pair and entering a passphrase the first time you use the launcher after reboot.)\n\nPasswords are recomended if this is a shared user account.\n\nSSH Keys are recommended if you are the only person who uses this account.\n\nThis option can be changed from the Identity menu.\n",
                "temporaryKeyNo": "Use my SSH Key",
                "temporaryKeyYes": "Use my password every time"
            },
            "displayWebDavInfoDialogOnRemoteDesktop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'echo -e \\\"You can access your local home directory in Konqueror with the URL:%sbr%s\\nwebdav://{localUsername}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName}%sbr%s\\nYour one-time password is {vncPasswd}\\\" > ~/.vnc/\\$HOSTNAME\\$DISPLAY-webdav.txt;'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "execHost": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "qpeek {jobidNumber}",
                "host": "login",
                "loop": false,
                "regex": [
                    "\\s*To access the desktop first create a secure tunnel to (?P<execHost>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "getProjects": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"glsproject -A -q | grep ',{username},\\|\\s{username},\\|,{username}\\s' \"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<group>\\S+)\\s+.*$"
                ],
                "requireMatch": true
            },
            "listAll": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "qstat -u {username}",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<jobid>(?P<jobidNumber>[0-9]+).\\S+)\\s+{username}\\s+(?P<queue>\\S+)\\s+(?P<jobname>desktop_\\S+)\\s+(?P<sessionID>\\S+)\\s+(?P<nodes>\\S+)\\s+(?P<tasks>\\S+)\\s+(?P<mem>\\S+)\\s+(?P<reqTime>\\S+)\\s+(?P<state>[^C])\\s+(?P<elapTime>\\S+)\\s*$"
                ],
                "requireMatch": false
            },
            "loginHost": "m2.massive.org.au",
            "messageRegeexs": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "messageRegexs": [
                {
                    "__class__": "__regex__",
                    "pattern": "^INFO:(?P<info>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^WARN:(?P<warn>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^ERROR:(?P<error>.*(?:\n|\r\n?))"
                }
            ],
            "openWebDavShareInRemoteFileBrowser": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'DISPLAY={vncDisplay} /usr/bin/konqueror webdav://{localUsername}:{vncPasswd}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName}'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "otp": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} ' module load turbovnc ; vncpasswd -o -display localhost{vncDisplay}'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*Full control one-time password: (?P<vncPasswd>[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "runSanityCheck": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'/usr/local/desktop/sanity_check.sh {launcher_version_number}'",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "running": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "qstat -u {username}",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<jobid>{jobid})\\s+{username}\\s+(?P<queue>\\S+)\\s+(?P<jobname>desktop_\\S+)\\s+(?P<sessionID>\\S+)\\s+(?P<nodes>\\S+)\\s+(?P<tasks>\\S+)\\s+(?P<mem>\\S+)\\s+(?P<reqTime>\\S+)\\s+(?P<state>R)\\s+(?P<elapTime>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "setDisplayResolution": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'/usr/local/desktop/set_display_resolution.sh {resolution}'",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "showStart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "showstart {jobid}",
                "host": "login",
                "loop": false,
                "regex": [
                    "Estimated Rsv based start .*?on (?P<estimatedStart>.*)"
                ],
                "requireMatch": true
            },
            "startServer": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'/usr/local/desktop/request_visnode.sh {project} {hours} {nodes} True False False'",
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<jobid>(?P<jobidNumber>[0-9]+)\\.\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "stop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'qdel -a {jobid}'",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "stopForRestart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'qdel {jobid} ; sleep 5'",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "tunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=yes -L {localPortNumber}:{execHost}:{remotePortNumber} -l {username} {loginHost} \"echo tunnel_hello; bash\"",
                "host": "local",
                "loop": false,
                "regex": [
                    "tunnel_hello"
                ],
                "requireMatch": true
            },
            "visibility": {
                "advancedCheckBoxPanel": true,
                "cipherPanel": "Advanced",
                "debugCheckBoxPanel": "Advanced",
                "loginHostPanel": false,
                "optionsDialog": false,
                "projectPanel": true,
                "resolutionPanel": "Advanced",
                "resourcePanel": true,
                "usernamePanel": true
            },
            "vncDisplay": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} ' module load turbovnc ; vncserver -list'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<vncDisplay>:[0-9]+)\\s*(?P<vncPID>[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "webDavIntermediatePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/local/desktop/get_ephemeral_port.py\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<intermediateWebDavPortNumber>[0-9]+)$"
                ],
                "requireMatch": true
            },
            "webDavRemotePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} /usr/local/desktop/get_ephemeral_port.py\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<remoteWebDavPortNumber>[0-9]+)$"
                ],
                "requireMatch": true
            },
            "webDavTunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -oExitOnForwardFailure=yes -R {intermediateWebDavPortNumber}:localhost:{localWebDavPortNumber} -l {username} {loginHost} \"ssh -R {remoteWebDavPortNumber}:localhost:{intermediateWebDavPortNumber} {execHost} 'echo tunnel_hello; bash'\"",
                "host": "local",
                "loop": false,
                "regex": [
                    "tunnel_hello"
                ],
                "requireMatch": true
            },
            "webDavUnmount": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'DISPLAY={vncDisplay} /usr/local/desktop/close_webdav_window.sh webdav://{localUsername}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName}'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            }
        },
        "Huygens on the CVL": {
            "__class__": "siteConfig",
            "__module__": "siteConfig",
            "agent": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -l {username} {execHost} \"echo agent_hello; bash \"",
                "host": "local",
                "loop": false,
                "regex": [
                    "agent_hello"
                ],
                "requireMatch": true
            },
            "dbusSessionBusAddress": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'MACHINE_ID=\\$(cat /var/lib/dbus/machine-id); cat ~/.dbus/session-bus/\\$MACHINE_ID-\\$(echo {vncDisplay} | tr -d \\\":\\\" | tr -d \\\".0\\\")'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^DBUS_SESSION_BUS_ADDRESS=(?P<dbusSessionBusAddress>.*)$"
                ],
                "requireMatch": true
            },
            "directConnect": true,
            "displayStrings": {
                "__class__": "sshKeyDistDisplayStrings",
                "__module__": "siteConfig",
                "newPassphrase": "new passphrase for new key",
                "newPassphraseEmptyForbidden": "new passphrase. empty passphrase forbidden",
                "newPassphraseMismatch": "passphrases don't match. enter new passphrases",
                "newPassphraseTitle": "Please enter a new passphrase",
                "newPassphraseTooShort": "passphrase to short. enter a new passphrase",
                "passphrasePrompt": "enter key passphrase",
                "passphrasePromptIncorrectl": "Incorrect. enter key passphrase",
                "passwdPrompt": "enter passwd",
                "passwdPromptIncorrect": "passwd incorrect. reenter",
                "persistentMessage": "Would you like to leave your current session running so that you can reconnect later?\nIt has {timestring} remaining.",
                "persistentMessagePersist": "Leave it running",
                "persistentMessageStop": "Stop the desktop",
                "qdelQueuedJob": "It looks like you've been waiting for a job to start.\nDo you want me to delete the job or leave it in the queue so you can reconnect later?\n",
                "qdelQueuedJobNOOP": "Leave it in the queue (I'll reconnect later)",
                "qdelQueuedJobQdel": "Delete the job",
                "reconnectMessage": "An Existing Desktop was found. It has {timestring} remaining. Would you like to reconnect or kill it and start a new desktop?",
                "reconnectMessageNo": "New desktop",
                "reconnectMessageYes": "Reconnect",
                "temporaryKey": "\nWould you like to use the launchers old behaviour (entering a password every time you start a new desktop) or try the new behaviour (creating an ssh key pair and entering a passphrase the first time you use the launcher after reboot.)\n\nPasswords are recomended if this is a shared user account.\n\nSSH Keys are recommended if you are the only person who uses this account.\n\nThis option can be changed from the Identity menu.\n",
                "temporaryKeyNo": "Use my SSH Key",
                "temporaryKeyYes": "Use my password every time"
            },
            "displayWebDavInfoDialogOnRemoteDesktop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'sleep 2;echo -e \\\"You can access your local home directory in Nautilus File Browser, using the location:\\n\\ndav://{localUsername}@localhost:8080/{homeDirectoryWebDavShareName}\\n\\nYour one-time password is {vncPasswd}\\\" > ~/.vnc/\\$HOSTNAME\\$DISPLAY-webdav.txt'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "execHost": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; qstat -f {jobidNumber} | grep exec_host | sed 's/\\ \\ */\\ /g' | cut -f 4 -d ' ' | cut -f 1 -d '/' | xargs -iname hostn name | grep address | sed 's/\\ \\ */\\ /g' | cut -f 3 -d ' ' | xargs -iip echo execHost ip; qstat -f {jobidNumber}\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*execHost (?P<execHost>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "getProjects": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"groups | sed 's@ @\\n@g'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<group>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "listAll": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; qstat -u {username} | tail -n +6\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<jobid>(?P<jobidNumber>[0-9]+).\\S+)\\s+{username}\\s+(?P<queue>huygens)\\s+(?P<jobname>desktop_\\S+)\\s+(?P<sessionID>\\S+)\\s+(?P<nodes>\\S+)\\s+(?P<tasks>\\S+)\\s+(?P<mem>\\S+)\\s+(?P<reqTime>\\S+)\\s+(?P<state>[^C])\\s+(?P<elapTime>\\S+)\\s*$"
                ],
                "requireMatch": false
            },
            "loginHost": "login.cvl.massive.org.au",
            "messageRegeexs": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "messageRegexs": [
                {
                    "__class__": "__regex__",
                    "pattern": "^INFO:(?P<info>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^WARN:(?P<warn>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^ERROR:(?P<error>.*(?:\n|\r\n?))"
                }
            ],
            "openWebDavShareInRemoteFileBrowser": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} \\\"export DBUS_SESSION_BUS_ADDRESS={dbusSessionBusAddress};echo \\\\\\\"import pexpect;child = pexpect.spawn('gvfs-mount dav://{localUsername}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName}');child.expect('Password: ');child.sendline('{vncPasswd}')\\\\\\\" | python;/usr/bin/gconftool-2 --type=Boolean --set /apps/nautilus/preferences/always_use_location_entry true;DISPLAY={vncDisplay} /usr/bin/nautilus --no-desktop --sm-disable dav://{localUsername}@localhost:{remoteWebDavPortNumber}/{homeDirectoryWebDavShareName};\\\"\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "otp": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load turbovnc ; vncpasswd -o -display localhost{vncDisplay}\"",
                "host": "exec",
                "loop": false,
                "regex": [
                    "^\\s*Full control one-time password: (?P<vncPasswd>[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "runSanityCheck": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "running": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; qstat | grep {username}\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*(?P<jobid>{jobidNumber}\\.\\S+)\\s+(?P<jobname>desktop_\\S+)\\s+{username}\\s+(?P<elapTime>\\S+)\\s+(?P<state>R)\\s+(?P<queue>\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "setDisplayResolution": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "showStart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "startServer": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; echo 'module load pbs ; /usr/local/bin/vncsession --vnc turbovnc --geometry {resolution} ; sleep {wallseconds}' |  qsub -q huygens -l nodes=1:ppn=1 -N desktop_{username} -o .vnc/ -e .vnc/\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<jobid>(?P<jobidNumber>[0-9]+)\\.\\S+)\\s*$"
                ],
                "requireMatch": true
            },
            "stop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; qdel -a {jobidNumber}\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "stopForRestart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"module load pbs ; module load maui ; qdel -a {jobidNumber}\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "tunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -L {localPortNumber}:localhost:{remotePortNumber} -l {username} {execHost} \"echo tunnel_hello; bash\"",
                "host": "local",
                "loop": false,
                "regex": [
                    "tunnel_hello"
                ],
                "requireMatch": true
            },
            "visibility": {
                "advancedCheckBoxPanel": true,
                "cipherPanel": "Advanced",
                "debugCheckBoxPanel": "Advanced",
                "loginHostPanel": false,
                "optionsDialog": false,
                "projectPanel": false,
                "resolutionPanel": "Advanced",
                "resourcePanel": "Advanced",
                "usernamePanel": true
            },
            "vncDisplay": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"cat /var/spool/torque/spool/{jobidNumber}.*\"",
                "host": "exec",
                "loop": false,
                "regex": [
                    "^.*?started on display \\S+(?P<vncDisplay>:[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "webDavIntermediatePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/local/bin/get_ephemeral_port.py\"",
                "host": "exec",
                "loop": false,
                "regex": [
                    "^(?P<intermediateWebDavPortNumber>[0-9]+)$"
                ],
                "requireMatch": true
            },
            "webDavRemotePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/local/bin/get_ephemeral_port.py\"",
                "host": "exec",
                "loop": false,
                "regex": [
                    "^(?P<remoteWebDavPortNumber>[0-9]+)$"
                ],
                "requireMatch": true
            },
            "webDavTunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -oExitOnForwardFailure=yes -R {remoteWebDavPortNumber}:localhost:{localWebDavPortNumber} -l {username} {execHost} \"echo tunnel_hello; bash\"",
                "host": "local",
                "loop": false,
                "regex": [
                    "tunnel_hello"
                ],
                "requireMatch": true
            },
            "webDavUnmount": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"/usr/bin/ssh {execHost} 'export DBUS_SESSION_BUS_ADDRESS={dbusSessionBusAddress};DISPLAY={vncDisplay} wmctrl -F -c \"{homeDirectoryWebDavShareName} - File Browser\"; DISPLAY={vncDisplay} timeout 3 gvfs-mount --unmount-scheme dav'\"",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            }
        },
        "Other": {
            "__class__": "siteConfig",
            "__module__": "siteConfig",
            "agent": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -l {username} {loginHost} \"echo agent_hello; bash \"",
                "host": "local",
                "loop": false,
                "regex": [
                    "agent_hello"
                ],
                "requireMatch": true
            },
            "directConnect": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "displayStrings": {
                "__class__": "sshKeyDistDisplayStrings",
                "__module__": "siteConfig",
                "newPassphrase": "new passphrase for new key",
                "newPassphraseEmptyForbidden": "new passphrase. empty passphrase forbidden",
                "newPassphraseMismatch": "passphrases don't match. enter new passphrases",
                "newPassphraseTitle": "Please enter a new passphrase",
                "newPassphraseTooShort": "passphrase to short. enter a new passphrase",
                "passphrasePrompt": "enter key passphrase",
                "passphrasePromptIncorrectl": "Incorrect. enter key passphrase",
                "passwdPrompt": "enter passwd",
                "passwdPromptIncorrect": "passwd incorrect. reenter",
                "persistentMessage": "Would you like to leave your current session running so that you can reconnect later?\nIt has {timestring} remaining.",
                "persistentMessagePersist": "Leave it running",
                "persistentMessageStop": "Stop the desktop",
                "qdelQueuedJob": "It looks like you've been waiting for a job to start.\nDo you want me to delete the job or leave it in the queue so you can reconnect later?\n",
                "qdelQueuedJobNOOP": "Leave it in the queue (I'll reconnect later)",
                "qdelQueuedJobQdel": "Delete the job",
                "reconnectMessage": "An Existing Desktop was found. It has {timestring} remaining. Would you like to reconnect or kill it and start a new desktop?",
                "reconnectMessageNo": "New desktop",
                "reconnectMessageYes": "Reconnect",
                "temporaryKey": "\nWould you like to use the launchers old behaviour (entering a password every time you start a new desktop) or try the new behaviour (creating an ssh key pair and entering a passphrase the first time you use the launcher after reboot.)\n\nPasswords are recomended if this is a shared user account.\n\nSSH Keys are recommended if you are the only person who uses this account.\n\nThis option can be changed from the Identity menu.\n",
                "temporaryKeyNo": "Use my SSH Key",
                "temporaryKeyYes": "Use my password every time"
            },
            "displayWebDavInfoDialogOnRemoteDesktop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "execHost": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "getProjects": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "listAll": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'vncserver -list'",
                "host": "login",
                "loop": false,
                "regex": [
                    "^(?P<vncDisplay>:[0-9]+)\\s+[0-9]+\\s*$"
                ],
                "requireMatch": false
            },
            "loginHost": null,
            "messageRegeexs": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "messageRegexs": [
                {
                    "__class__": "__regex__",
                    "pattern": "^INFO:(?P<info>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^WARN:(?P<warn>.*(?:\n|\r\n?))"
                },
                {
                    "__class__": "__regex__",
                    "pattern": "^ERROR:(?P<error>.*(?:\n|\r\n?))"
                }
            ],
            "openWebDavShareInRemoteFileBrowser": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "otp": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'vncpasswd -o -display localhost{vncDisplay}'",
                "host": "login",
                "loop": false,
                "regex": [
                    "^\\s*Full control one-time password: (?P<vncPasswd>[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "runSanityCheck": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "running": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "setDisplayResolution": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "showStart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "startServer": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "\"vncserver -geometry {resolution}\"",
                "host": "login",
                "loop": false,
                "regex": [
                    "^.*?started on display \\S+(?P<vncDisplay>:[0-9]+)\\s*$"
                ],
                "requireMatch": true
            },
            "stop": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'vncserver -kill {vncDisplay}'",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "stopForRestart": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": "'vncserver -kill {vncDisplay}'",
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "tunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": true,
                "cmd": "{sshBinary} -A -c {cipher} -t -t -oStrictHostKeyChecking=no -L {localPortNumber}:localhost:{remotePortNumber} -l {username} {loginHost} \"echo tunnel_hello; bash\"",
                "host": "local",
                "loop": false,
                "regex": [
                    "tunnel_hello"
                ],
                "requireMatch": true
            },
            "visibility": {
                "advancedCheckBoxPanel": true,
                "cipherPanel": "Advanced",
                "debugCheckBoxPanel": "Advanced",
                "loginHostPanel": true,
                "optionsDialog": false,
                "projectPanel": false,
                "resolutionPanel": false,
                "resourcePanel": false,
                "usernamePanel": true
            },
            "vncDisplay": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "webDavIntermediatePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "webDavRemotePort": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            },
            "webDavTunnel": {
                "__class__": "cmdRegEx",
                "__module__": "siteConfig",
                "async": false,
                "cmd": null,
                "host": "login",
                "loop": false,
                "regex": [
                    null
                ],
                "requireMatch": false
            }
        }
    }
]
